{
  "uid" : "472f513399cfc781",
  "name" : "provide custom asserts",
  "fullName" : "provide custom asserts",
  "historyId" : "1337dce0cc4842890e43c89928f8a9ff",
  "time" : {
    "start" : 1594209653797,
    "stop" : 1594209655020,
    "duration" : 1223
  },
  "description" : "\n        You can write custom asserts by providing extension function. \n        If you do so, maybe your asserts is worth to be added to main asserts list into KBDD project. \n        Pull Requests are welcome!\n    ",
  "descriptionHtml" : "<pre><code>    You can write custom asserts by providing extension function. \n    If you do so, maybe your asserts is worth to be added to main asserts list into KBDD project. \n    Pull Requests are welcome!\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "\n        You can write custom asserts by providing extension function. \n        If you do so, maybe your asserts is worth to be added to main asserts list into KBDD project. \n        Pull Requests are welcome!\n    ",
    "status" : "passed",
    "steps" : [ {
      "name" : "Code snippet",
      "time" : {
        "start" : 1594209653842,
        "stop" : 1594209653844,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "adcf24c8eb48aaab",
        "name" : "code-snippet",
        "source" : "adcf24c8eb48aaab.txt",
        "type" : "text/plain",
        "size" : 1007
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Given server for url answers (url: /asserts/custom/int/amount, response: \n                {\n                    \"amount\": 120,\n                }\n                )",
      "time" : {
        "start" : 1594209653854,
        "stop" : 1594209653855,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "custom assert via extension method",
      "time" : {
        "start" : 1594209654908,
        "stop" : 1594209655011,
        "duration" : 103
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "bodyJson()[\"amount\"] isEvenInteger",
        "time" : {
          "start" : 1594209655011,
          "stop" : 1594209655011,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "custom assert without extension method",
      "time" : {
        "start" : 1594209655012,
        "stop" : 1594209655015,
        "duration" : 3
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "357a750e7f78eb6c",
      "name" : "request http://localhost:40445/asserts/custom/int/amount",
      "source" : "357a750e7f78eb6c.txt",
      "type" : "text/plain",
      "size" : 255
    }, {
      "uid" : "823b9544c8351e41",
      "name" : "response http://localhost:40445/asserts/custom/int/amount",
      "source" : "823b9544c8351e41.txt",
      "type" : "text/plain",
      "size" : 246
    } ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "framework",
    "value" : "corounit"
  }, {
    "name" : "package",
    "value" : "ru.fix.kbdd.example.cases.ResponseCustomAsserts"
  }, {
    "name" : "suite",
    "value" : "ru.fix.kbdd.example.cases.ResponseCustomAsserts"
  }, {
    "name" : "feature",
    "value" : "Custom"
  }, {
    "name" : "testMethod",
    "value" : "provide custom asserts"
  }, {
    "name" : "epic",
    "value" : "Asserts"
  }, {
    "name" : "testClass",
    "value" : "ru.fix.kbdd.example.cases.ResponseCustomAsserts"
  }, {
    "name" : "thread",
    "value" : "fc9a2fba-6db4-40c8-ac2c-a00ef9120061"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "472f513399cfc781.json",
  "parameterValues" : [ ]
}